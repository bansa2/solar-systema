name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
    
env:
   MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
   MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
   MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}

jobs:
    unit-testing:
        name: Unit Testing
        strategy:
          matrix:
             nodejs_version: [18, 20]
             os: [ubuntu-latest]
             exclude:
               - nodejs_version: 18
                 os: macos-latest
        runs-on: ${{matrix.os}}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - ${{matrix.nodejs_version}}
          uses: actions/setup-node@v3
          with:
            node-version: ${{matrix.nodejs_version}}
    
        - name: Install Dependencies
          run: npm install

        - name: cache npm dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{runner.os}}-node-modules-${{ hashFiles('package-lock.json') }}
    
        - name: Unit Testing
          id: unit-data
          run: npm test
        
        - name: Archive Test Result
          if:   always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-test-result
            path: test-result.xml

            
    code-coverage:
      name: code-coverage
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - 18
          uses: actions/setup-node@v3
          with:
            node-version: 18
        
        - name: cache npm dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{runner.os}}-node-modules-${{ hashFiles('package-lock.json') }}  

    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          continue-on-error: true
          run: npm test
        
        - name: check code coverage
          continue-on-error: true
          run: npm run coverage
        
        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          with:
            name: code-coverage-result
            path: coverage
            retention-days: 5

   

    docker:
      name: conterization
      needs: [unit-testing, code-coverage]
      runs-on: ubuntu-latest
      steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: DockerHub Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{vars.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      
      - name: DOcker build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{vars.DOCKER_USERNAME}}/solar-system:${{ github.sha }}
        
      - name: Docker Image Test
        run: |
          docker images
          docker run --name solar-system-app -d \
          -p 3000:3000 \
          -e MONGO_URI=$MONGO_URI \
          -e MONGO_USERNAME=$MONGO_USERNAME \
          -e MONGO_PASSWORD=$MONGO_PASSWORD  \
          ${{vars.DOCKER_USERNAME}}/solar-system:${{ github.sha }}
            
          export IP = $(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app )
          echo $IP

          echo Testing Url Image Url using wget
          wget -q -o - 127.0.0.1:3000/live | grep live





